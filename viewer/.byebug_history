q
ap posts["2015"]
year
ap posts_in_yr
ap posts_in_month
ap posts_by_month
q
ap posts_in_yr
posts_in_yr
q
ap posts_in_yr
posts_in_yr
ap posts
ap posts_in_yr
posts_in_yr
q
posts.keys
ap posts_by_year
_year
c
_year
ap posts_by_year
ap posts
q
ap posts_by_year
ap posts_by_month
posts_by_month.reject { |post| post['recommendations'].empty? }
posts_by_month
q
posts_by_year
c
posts_by_month
month
c
posts_by_year
month
posts_by_month
q
posts_by_month
c
posts_by_month
c
posts_by_month
c
ap posts_in_month
posts_in_month
month
q
ap posts.values.map(&:values).flatten
ap posts.values.map(&:values)
ap posts.values
ap posts.deep_flatten
ap posts.flatten
ap posts
ap posts.flat_map(&:itself)
ap posts["2015"]["10"]
ap posts["2015"]
ap posts[2015]
ap post
ap posts
ap post.first
 posts
q
item.identifier.to_s
item.identifier
item._unwrap
item.to_h
item.keys
item.unwrap
item.unrwap
item.inspect
item.parent
item.raw_filename
item.name
 puts item
q
identifier
n
block_given?
step
n
 @rules_collection.first
 @rules_collection
ap @rules_collection
n
rule
@rules_collection
n
block_given?
step
q
rec_cat
c
q
I18n.transliterate("v√≠deo")
I18n.transliterate(text)
I18n.config.available_locales = :en
I18n.default_locale = :en # (note that `en` is already the default!)
I18n.transliterate(text)
c
q
text.force_encoding("BINARY")
ap text
ap rec_cat
c
ap rec_cat
c
ap rec_cat
c
list
ap rec_cat
q
ap recommendations_by_category.keys
q
ap recommendations_by_category.keys
q
ap recommendations_by_category.keys
recommendations_by_category
recommendations.group_by(&:category)
@recommendations_by_category
q
ap list.first.category
ap list.first
ap list
q
ap list
q
ap posts.to_a.flatten
ap posts.to_a.flatten(3)
ap posts.flatten(3)
ap posts.flatten(2)
ap posts.flatten(1)
ap posts
posts
q
"abc".start_with? "A"
"abc".start_with? "a"
"abc".starts_with?
ap post
q
ap posts.first
ap posts
ap posts[0]
[
ap posts
q
ap posts.first
posts.first
posts.count
